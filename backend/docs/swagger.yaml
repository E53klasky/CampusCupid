basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.RegistrationRequest:
    properties:
      dateOfBirth:
        description: ConfirmPassword   string   `json:"confirmPassword" binding:"required"`
        type: string
      email:
        type: string
      firstName:
        type: string
      gender:
        type: string
      interestedIn:
        type: string
      interests:
        items:
          type: string
        type: array
      lookingFor:
        type: string
      password:
        minLength: 8
        type: string
      photos:
        items:
          type: string
        type: array
      sexualOrientation:
        description: Bio               string   `json:"bio"`
        type: string
    required:
    - dateOfBirth
    - email
    - firstName
    - gender
    - interestedIn
    - interests
    - lookingFor
    - password
    - photos
    type: object
  models.UpdatePreferencesRequest:
    properties:
      ageRange:
        type: string
      distance:
        type: integer
      genderPreference:
        type: string
    type: object
  models.UpdateProfileRequest:
    properties:
      ageRange:
        type: string
      dateOfBirth:
        type: string
      distance:
        type: integer
      firstName:
        type: string
      gender:
        type: string
      genderPreference:
        type: string
      interestedIn:
        type: string
      interests:
        description: Bio               string   `json:"bio"`
        items:
          type: string
        type: array
      lookingFor:
        type: string
      photos:
        items:
          type: string
        type: array
      profilePictureURL:
        type: string
      sexualOrientation:
        type: string
    type: object
  models.User:
    properties:
      ageRange:
        type: string
      bio:
        type: string
      createdAt:
        type: string
      dateOfBirth:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      distance:
        type: integer
      email:
        type: string
      firstName:
        type: string
      gender:
        type: string
      genderPreference:
        type: string
      id:
        type: integer
      interestedIn:
        type: string
      interests:
        items:
          type: string
        type: array
      lookingFor:
        type: string
      photos:
        items:
          type: string
        type: array
      profilePictureURL:
        type: string
      sexualOrientation:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@campuscupid.com
    name: API Support
  description: This is the backend API for the CampusCupid dating app.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: CampusCupid API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - users
  /preferences/{user_id}:
    put:
      consumes:
      - application/json
      description: Update the user's age range, distance, and gender preference
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: User Preferences
        in: body
        name: preferences
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePreferencesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user preferences
      tags:
      - users
  /profile/{user_id}:
    get:
      consumes:
      - application/json
      description: Get the profile details of a user using the user_id
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get user profile by user_id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update profile details such as bio, interests, and preferences
        (excluding ID, Username, Email, Password)
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Updated profile details
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user profile by user_id
      tags:
      - users
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - users
swagger: "2.0"
